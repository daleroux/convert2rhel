---
- hosts: centoshosts
  become: true
  tasks:
  - name: verify operating system
    assert:
      that: "ansible_distribution == 'CentOS'"

  - name: Exit if CentOs version is not 7
    fail: 
      msg: "CentOs version is not 7"
    when: ( ansible_distribution_major_version != '7' ) 

  - name: Create /etc/rhsm/ca directory if it does not exist
    file:
      path: /etc/rhsm/ca
      state: directory
      mode: '0750'
      owner: root
      group: root
    
  - name: Looping to download the files requied for the conversion
    get_url:
      url: "{{ item.url }}"
      dest: "{{ item.dest }}"
      validate_certs: no
      mode: '0644'
    with_items: "{{ file2download }}"

  - name: Install convert2rhel 
    yum:
      name: convert2rhel
      state: latest

  - name: download the katello-ca-consumer-latest package from the Satellite server
    get_url:
      url: "https://{{ mysatellite }}/pub/katello-ca-consumer-latest.noarch.rpm"
      dest: /usr/share/convert2rhel/subscription-manager/katello-ca-consumer-latest.noarch.rpm
      validate_certs: no
      mode: '0644'

  - name: update system with the latest available packages
    yum:
      name: '*'
      state: latest

  - name: Launch conversion asynchronously
    command: >-
      convert2rhel --org demo --activationkey AK_CV_RHEL7 -y
    async: "{{ convert2rhel_timeout }}"
    poll: 0
    register: convert2rhel_async

  - name: Check if conversion is finished
    async_status:
      jid: "{{ convert2rhel_async.ansible_job_id }}"
    register: job_result
    until: job_result.finished
    retries: "{{ ( convert2rhel_timeout / convert2rhel_retry_interval ) | int }}"
    delay: "{{ convert2rhel_retry_interval }}"

  - name: Reboot the system
    reboot:

  - name: Remove CentOS packages remaining on system
    yum:
      name: "{{ item.name }}"
      state: absent
    with_items: "{{ packages2remove }}"

  - name: Remove /etc/yum.repos.d/convert2rhel.repo
    file:
      path: /etc/yum.repos.d/convert2rhel.repo
      state: absent

  - name: Disable all RHSM repositories
    rhsm_repository:
      name: '*'
      state: disabled

  - name: Enable repos listed in repos_and_packages.yml
    rhsm_repository:
      name: "{{ item.tag }}"
      state: present
    with_items: "{{ repos2enable }}"
